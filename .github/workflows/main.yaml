name: CI/CD Pipeline - GitHub Pages

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Check for security vulnerabilities
        run: npm audit --audit-level=moderate
      
      - name: Lint code (if eslint is configured)
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.json ] || [ -f package.json ] && grep -q "eslint" package.json; then
            npm run lint || echo "No lint script found"
          else
            echo "ESLint not configured, skipping lint check"
          fi
        continue-on-error: true

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build

      - name: Upload production-ready build
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist   # ðŸ‘ˆ change this if your build output folder is different (e.g. "build")

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
